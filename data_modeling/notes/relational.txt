#############################
relational databases
#############################
organize data into one more tables of columns and rows with a unique key ID each row
table aka relation
attribute aka column
tuple aka row
generally each table represents 1 entity type (ie customer or product)

database/schema = collection of tables
tables/relation = grouping of rows sharing the same labeled elements

###################################
when to use a relational database
###################################
1. ease of use with SQL
2. ability to use JOINS - combine more than one table based on a common key
3. ability to aggregations and analytics
4. smaller data volume
5. model the data itself - not modeling your data to the queries
6. secondary indexes - an index that is not the primary key
7. ACID transactions

#####
ACID
#####
guarantee validity even in the event of power failures, errors
Atomicity = the whole transaction is processed or nothing is processed 
ex: if transferring money from checking to savings account, both steps must be success or else no steps must occur

Consistency = only transactions that abide by constrains and rules is written into the database otherwise database keeps previous state
ex: cannot insert an integer for a field that requires a boolean

Isolation = transactions are processed independently and securely
the rows that are effected by the query are locked until the transaction is complete
other queries are not able to access these rows 
this ensures correctness of data for multiple users running queries against the database

https://www.lifewire.com/isolation-definition-1019173
all transactions are carried out as if it is the only transaction in the system
need to entirely complete one transaction before executing another transaction
ex: Joe issues a transaction on a database at the same time Mary issues a different transaction
both transactions should operate in an isolated  manner 
the database should perform Joe's entire transaction before executing Mary's or vice versa
this prevents Joe's transaction from reading intermediate data produced as side effects of Mary's transaction that will not be written to the db

Durability = completed transactions are saved to the database even in cases of system failure
guarantees once a transaction has been COMMITTED it will remain committed even in the case of a system failure
transaction is recorded in non-volatile memory (ie not in RAM)
ex: if you unplug a computer with a database and plug the computer back in, the data will be there

Postgres
requires you to commit after every transaction
set autocommit=True to avoid having to commit after every transaction

###################################
importance of relational databases
###################################
OG rule 1 = information rule
all info in a relational database is represented explicity at a logical level and in exactly one way = by values in tables

1. standardization of the data model
once the data is transformed into rows and columns format your data is standardized
can be queried using SQL

2. flexibility in adding and altering tables
relational databases give you flexibility to add tables, alter tables, and remove data

3. data integrity
strong data typing = avoid inserting data that will cause curroption

4. SQL
standard language to acces the data

5. simplicity
data is systematically stored and modeled in tabular format

6. intuitive organization
models should be an intuitive 

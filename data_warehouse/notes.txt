https://en.wikipedia.org/wiki/Data_warehouse
data warehouse
system used for reporting and data analysis 
central repositories of integrated data from 1+ disparate sources
store current and historical data in a single place
used for creating analytical reports throughout the enterprise 

https://en.wikipedia.org/wiki/Data_mart
data mart = subset of data warehouse
usually oriented to specific business line or team
info in a data mart pertains to a specific department

data marts exist because info the in the database is not organized in a way that makes it readily accessible >
queries are too complicated + resource consuming

while transactional databases are designed to be updated, data warehouses + marts are read only
data warehouses are designed to access large groups of related records
data marts improve end-user response time by allowing users to have access to a specific type of data they need to view most often 
provide data in a way that supports the users

https://medium.com/@BluePi_In/deep-diving-in-the-world-of-data-warehousing-78c0d52f49a
data warehousing helps implement
- fetching data from multiple heterogenous data sources
- clean, filter, and transform data for insights
- store the data in a form and manner that is easy to access, understand, and use

##############################
DW from business perspective
##############################
You are in charge of a retailer’s data infrastructure. Let’s look at some business activities.

Customers should be able to find goods & make orders
Inventory Staff should be able to stock, retrieve, and re-order goods
Delivery Staff should be able to pick up & deliver goods
HR should be able to assess the performance of sales staff
Marketing should be able to see the effect of different sales channels
Management should be able to monitor sales growth

In a simple world this could potentially be performed in a relational database

However in the real world things to consider are:
Retailer has a nation-wide presence → Scale? A relational database can only grow vertically
Acquired smaller retailers, brick & mortar shops, online store → Single database? Complexity? Now have many systems to integrate
Has support call center & social media accounts → Tabular data? Will likely be messy non-relational data
Customers, Inventory Staff and Delivery staff expect the system to be fast & stable → Performance
HR, Marketing & Sales Reports want a lot information but have not decided yet on everything they need → Clear Requirements?

##############################
DW from technical perspective
##############################
data warehouse definitions
copy of transaction data specifically structured for query and analysis

subject-oriented = no one size fits all
integrated = data from many sources
nonvolatile = not transient, needs to be persisted
time-variant collection of data = I can ask the same question from one day to the next and it is going to change

retreives + consolidates data periodically = continuous data integration
from source systems into dimensional or normalized data store
keeps years of history + queried for business intelligence 
typically updated in batches + not every time a transaction happens in the source system

data in
ETL
extract data from the source system used for operations
transform the data 
load into a dimensional model

dimensional model
designed to make it easy for business users to work with the data
improve analytical query performance
technologies used for storing dimensional models are different than traditional technologies

data out
BI apps
visuals/reportings

data warehouse goals
simple to understand
performant
quality assured 
handle new questions well
secure

fact + dimension tables
facts - should contain numeric + additive values
a comment on an article is an event but not easily added = not a good fact
an invoice number is numberic but adding it does not make sense = not a good fact
total amount of an invoice can be added = good fact

dimensions - should contain more contextual info
date + time = good dimensions
physical locations + their attributes

exercises demonstrate moving from 3NF to dimension tables
all needed dimensions are available in the fact table
eliminates the need for deep joins
star schema is easy to understand and write queries against
queries with the star schema are more performant
